[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 24552000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:27.729Z",
        "line": 10,
        "name": "TC_0101 gecerli SSN test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0101-gecerli-ssn-test",
        "after": [
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 288000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Kullanici bir user olarak SSN textboxina \"333-22-4444\" numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"333-22-4444\"",
                  "offset": 41
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_SSN_textboxina_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "line": 12,
            "name": "Kullanici bir user olarak SSN textboxinin bir hata uyarisi vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_SSN_textboxinin_bir_hata_uyarisi_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0101"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 631000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:53.482Z",
        "line": 21,
        "name": "TC_0102 gecersiz SSN test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0102-gecersiz-ssn-test;tc-0102-ssn-numaralari;2",
        "after": [
          {
            "result": {
              "duration": 436000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 153000000,
              "status": "passed"
            },
            "line": 16,
            "name": "Kullanici bir user olarak SSN textboxina gecersiz  \"333-22-44445\" numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"333-22-44445\"",
                  "offset": 51
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_SSN_textboxina_gecersiz_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "line": 17,
            "name": "Kullanici bir user olarak \"Your SSN is invalid\" hata mesajini goruntuler",
            "match": {
              "arguments": [
                {
                  "val": "\"Your SSN is invalid\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_hata_mesajini_goruntuler(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0102"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 452000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:55.128Z",
        "line": 22,
        "name": "TC_0102 gecersiz SSN test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0102-gecersiz-ssn-test;tc-0102-ssn-numaralari;3",
        "after": [
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 16,
            "name": "Kullanici bir user olarak SSN textboxina gecersiz  \"333-22-443\" numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"333-22-443\"",
                  "offset": 51
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_SSN_textboxina_gecersiz_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "line": 17,
            "name": "Kullanici bir user olarak \"Your SSN is invalid\" hata mesajini goruntuler",
            "match": {
              "arguments": [
                {
                  "val": "\"Your SSN is invalid\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_hata_mesajini_goruntuler(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0102"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 179000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:56.550Z",
        "line": 25,
        "name": "TC_0103  gecerli first name positive test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0103--gecerli-first-name-positive-test",
        "after": [
          {
            "result": {
              "duration": 370000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 122000000,
              "status": "passed"
            },
            "line": 26,
            "name": "Kullanici bir user olarak First Name textboxina \"Ali\" ismini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"Ali\"",
                  "offset": 48
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_First_Name_textboxina_ismini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "line": 27,
            "name": "Kullanici bir user olarak First Name textboxinin bir hata uyarisi vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_First_Name_textboxinin_bir_hata_uyarisi_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0103"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 487000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:57.895Z",
        "line": 30,
        "name": "TC_0104 bos first name negative test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0104-bos-first-name-negative-test",
        "after": [
          {
            "result": {
              "duration": 378000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 106000000,
              "status": "passed"
            },
            "line": 31,
            "name": "Kullanici bir user olarak First Name textboxini \" \" bos birakir",
            "match": {
              "arguments": [
                {
                  "val": "\" \"",
                  "offset": 48
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_First_Name_textboxini_bos_birakir(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "line": 32,
            "name": "Kullanici bir user olarak \"Your First Name is required\" hata uyarisini goruntuler",
            "match": {
              "arguments": [
                {
                  "val": "\"Your First Name is required\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_hata_uyarisini_goruntuler(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0104"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 443000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 197000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 170000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:10:59.306Z",
        "line": 35,
        "name": "TC_0105  gecerli last name positive test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0105--gecerli-last-name-positive-test",
        "after": [
          {
            "result": {
              "duration": 415000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 212000000,
              "status": "passed"
            },
            "line": 36,
            "name": "Kullanici bir user olarak Last Name textboxina \"Smith\" soyismini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"Smith\"",
                  "offset": 47
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Last_Name_textboxina_soyismini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "line": 37,
            "name": "Kullanici bir user olarak First Name textboxinin bir hata mesaji vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_First_Name_textboxinin_bir_hata_mesaji_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0105"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 551000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 190000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:00.812Z",
        "line": 40,
        "name": "TC_0106 bos last name negative test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0106-bos-last-name-negative-test",
        "after": [
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "line": 41,
            "name": "Kullanici bir user olarak Last Name textboxini \" \" bos birakir",
            "match": {
              "arguments": [
                {
                  "val": "\" \"",
                  "offset": 47
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Last_Name_textboxini_bos_birakir(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "line": 42,
            "name": "Kullanici bir user olarak \"Your Last Name is required\" hata mesajini goruntuler",
            "match": {
              "arguments": [
                {
                  "val": "\"Your Last Name is required\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_hata_mesajini_goruntuler(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0106"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 575000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 151000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 159000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:02.288Z",
        "line": 45,
        "name": "TC_0107  gecerli address test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0107--gecerli-address-test",
        "after": [
          {
            "result": {
              "duration": 411000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 337000000,
              "status": "passed"
            },
            "line": 46,
            "name": "Kullanici bir user olarak Address textboxina \"A mah. B cad. No:1 66300 Istanbul Sariyer\"  adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A mah. B cad. No:1 66300 Istanbul Sariyer\"",
                  "offset": 45
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Address_textboxina_adresini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "line": 47,
            "name": "Kullanici bir user olarak Address textboxinin bir hata mesaji vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Address_textboxinin_bir_hata_mesaji_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0107"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 168000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:04.007Z",
        "line": 50,
        "name": "TC_0108 gecerli mobile phone number test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0108-gecerli-mobile-phone-number-test",
        "after": [
          {
            "result": {
              "duration": 378000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 191000000,
              "status": "passed"
            },
            "line": 51,
            "name": "Kullanici bir user olarak Mobile Phone Number textboxina \"123-123-1234\" cep telefonu numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"123-123-1234\"",
                  "offset": 57
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Mobile_Phone_Number_textboxina_cep_telefonu_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "line": 52,
            "name": "Kullanici bir user olarak Mobile Phone Number textboxinin bir hata mesaji vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Mobile_Phone_Number_textboxinin_bir_hata_mesaji_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0108"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 569000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:05.637Z",
        "line": 55,
        "name": "TC_0109 gecersiz mobile phone number negative test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0109-gecersiz-mobile-phone-number-negative-test",
        "after": [
          {
            "result": {
              "duration": 390000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 131000000,
              "status": "passed"
            },
            "line": 56,
            "name": "Kullanici bir user olarak Mobile Phone Number textboxina tire olmadan \"1231231234\" cep telefonu numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"1231231234\"",
                  "offset": 70
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Mobile_Phone_Number_textboxina_tire_olmadan_cep_telefonu_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "line": 57,
            "name": "Kullanici bir user olarak \"Your mobile phone number is invalid\" hata mesajini goruntuler",
            "match": {
              "arguments": [
                {
                  "val": "\"Your mobile phone number is invalid\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_hata_mesajini_goruntuler(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0109"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 491000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 196000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:07.151Z",
        "line": 60,
        "name": "TC_0110 gecerli kullanici adi test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0110-gecerli-kullanici-adi-test",
        "after": [
          {
            "result": {
              "duration": 394000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 156000000,
              "status": "passed"
            },
            "line": 61,
            "name": "Kullanici bir user olarak Username textboxina  \"Abc123\" kullanici adini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"Abc123\"",
                  "offset": 47
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Username_textboxina_kullanici_adini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "line": 62,
            "name": "Kullanici bir user olarak Username textboxinin bir hata mesaji vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Username_textboxinin_bir_hata_mesaji_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0110"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 191000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:08.618Z",
        "line": 65,
        "name": "TC_0111 gecersiz kullanici adi test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0111-gecersiz-kullanici-adi-test",
        "after": [
          {
            "result": {
              "duration": 343000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2106000000,
              "status": "passed"
            },
            "line": 66,
            "name": "Kullanici bir user olarak Username textboxina  sadece sayilardan olusan \"123\" kullanici adini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"123\"",
                  "offset": 72
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Username_textboxina_sadece_sayilardan_olusan_kullanici_adini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "line": 67,
            "name": "Kullanici bir user olarak Username textboxinin cerceve renginin kirmizi oldugunu goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Username_textboxinin_cerceve_renginin_kirmizi_oldugunu_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0111"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 429000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:11.989Z",
        "line": 70,
        "name": "TC_0112 gecerli email test",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0112-gecerli-email-test",
        "after": [
          {
            "result": {
              "duration": 382000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 212000000,
              "status": "passed"
            },
            "line": 71,
            "name": "Kullanici bir user olarak Email textboxina \"abc@mail.com\" mail adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"abc@mail.com\"",
                  "offset": 43
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Email_textboxina_mail_adresini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77000000,
              "status": "passed"
            },
            "line": 72,
            "name": "Kullanici bir user olarak Email textboxinin bir hata mesaji vermedigini goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Email_textboxinin_bir_hata_mesaji_vermedigini_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0112"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 614000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 209000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:13.469Z",
        "line": 75,
        "name": "TC_0113 gecerli verilerle hesap olusturma",
        "description": "",
        "id": "us-01-success-register-with-valid-credentials;tc-0113-gecerli-verilerle-hesap-olusturma",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 414000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 239000000,
              "status": "passed"
            },
            "line": 76,
            "name": "Kullanici bir user olarak SSN textboxina \"333-28-4444\" numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"333-28-4444\"",
                  "offset": 41
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_SSN_textboxina_numarasini_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 122000000,
              "status": "passed"
            },
            "line": 77,
            "name": "Kullanici bir user olarak First Name textboxina \"Ali\" ismini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"Ali\"",
                  "offset": 48
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_First_Name_textboxina_ismini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161000000,
              "status": "passed"
            },
            "line": 78,
            "name": "Kullanici bir user olarak Last Name textboxina \"Smith\" soyismini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"Smith\"",
                  "offset": 47
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Last_Name_textboxina_soyismini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 328000000,
              "status": "passed"
            },
            "line": 79,
            "name": "Kullanici bir user olarak Address textboxina \"A mah. B cad. No:1 66300 Istanbul Sariyer\"  adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A mah. B cad. No:1 66300 Istanbul Sariyer\"",
                  "offset": 45
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Address_textboxina_adresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 80,
            "name": "Kullanici bir user olarak Mobile Phone Number textboxina \"123-123-1234\" cep telefonu numarasini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"123-123-1234\"",
                  "offset": 57
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Mobile_Phone_Number_textboxina_cep_telefonu_numarasini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193000000,
              "status": "passed"
            },
            "line": 81,
            "name": "Kullanici bir user olarak Username textboxina  \"AAbc123\" kullanici adini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"AAbc123\"",
                  "offset": 47
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Username_textboxina_kullanici_adini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254000000,
              "status": "passed"
            },
            "line": 82,
            "name": "Kullanici bir user olarak Email textboxina \"abc12@mail.com\" mail adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"abc12@mail.com\"",
                  "offset": 43
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Email_textboxina_mail_adresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 287000000,
              "status": "passed"
            },
            "line": 83,
            "name": "Kullanici bir user olarak New password textboxina \"A1b2C3\" sifresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 50
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_New_password_textboxina_sifresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 319000000,
              "status": "passed"
            },
            "line": 84,
            "name": "Kullanici bir user olarak New password confirmation textboxina \"A1b2C3\" sifresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 63
                }
              ],
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_New_password_confirmation_textboxina_sifresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205000000,
              "status": "passed"
            },
            "line": 85,
            "name": "Kullanici bir user olarak Register butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_Register_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.xpath: //strong[.\u003d\u0027Registration saved!\u0027]\u0027 (tried for 10 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat gmibank.utilities.ReusableMethods.waitForVisibility(ReusableMethods.java:70)\r\n\tat gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_basarili_bir_kayit_olusturulduguna_dair_mesaj_goruntuler(US_01_Step_Definitions.java:187)\r\n\tat ✽.Kullanici bir user olarak basarili bir kayit olusturulduguna dair mesaj goruntuler(file:///C:/Users/fikir/IdeaProjects/gmibankproject/src/test/resources/features/us_01.feature:86)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong[.\u003d\u0027Registration saved!\u0027]\"}\n  (Session info: chrome\u003d86.0.4240.198)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\n*** Element info: {Using\u003dxpath, value\u003d//strong[.\u003d\u0027Registration saved!\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat gmibank.utilities.ReusableMethods.waitForVisibility(ReusableMethods.java:70)\r\n\tat gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_basarili_bir_kayit_olusturulduguna_dair_mesaj_goruntuler(US_01_Step_Definitions.java:187)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\n",
              "duration": 20166000000,
              "status": "failed"
            },
            "line": 86,
            "name": "Kullanici bir user olarak basarili bir kayit olusturulduguna dair mesaj goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_basarili_bir_kayit_olusturulduguna_dair_mesaj_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_01"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0113"
          }
        ]
      }
    ],
    "name": "US_01 success register with valid credentials",
    "description": "",
    "id": "us-01-success-register-with-valid-credentials",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_01.feature",
    "tags": [
      {
        "name": "@US_01",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 3,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 676000000,
              "status": "passed"
            },
            "line": 4,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 237000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:37.358Z",
        "line": 9,
        "name": "TC_0201 registiration test",
        "description": "",
        "id": "us-02-test;tc-0201-registiration-test",
        "after": [
          {
            "result": {
              "duration": 399000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 285000000,
              "status": "passed"
            },
            "line": 10,
            "name": "kullanici textboxlari bos birakip register butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_textboxlari_bos_birakip_register_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 196000000,
              "status": "passed"
            },
            "line": 11,
            "name": "kullanici bos birakilan textbox\u0027larda uyari yazisi ciktigini dogrular",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_bos_birakilan_textbox_larda_uyari_yazisi_ciktigini_dogrular()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_02"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0201"
          }
        ]
      },
      {
        "line": 3,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 391000000,
              "status": "passed"
            },
            "line": 4,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 159000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:39.345Z",
        "line": 13,
        "name": "TC_0202 invalid SSN test",
        "description": "",
        "id": "us-02-test;tc-0202-invalid-ssn-test",
        "after": [
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 154000000,
              "status": "passed"
            },
            "line": 14,
            "name": "kullanici SSN textboxina sayilar arasinda bosluk koyarak giris yapar",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_SSN_textboxina_sayilar_arasinda_bosluk_koyarak_giris_yapar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4029000000,
              "status": "passed"
            },
            "line": 15,
            "name": "invalid numara girildiginde textbox\u0027in kenar rengi kirmizi gorulur",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.invalid_numara_girildiginde_textbox_in_kenar_rengi_kirmizi_gorulur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_02"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0202"
          }
        ]
      },
      {
        "line": 3,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 452000000,
              "status": "passed"
            },
            "line": 4,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:44.604Z",
        "line": 17,
        "name": "TC_0203 invalid mobile phone number test",
        "description": "",
        "id": "us-02-test;tc-0203-invalid-mobile-phone-number-test",
        "after": [
          {
            "result": {
              "duration": 350000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 157000000,
              "status": "passed"
            },
            "line": 18,
            "name": "kullanici Mobile Phone Number textbox\u0027ini sayilar arasinda ozel karakter kullanmadan doldurur",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_Mobile_Phone_Number_textbox_ini_sayilar_arasinda_ozel_karakter_kullanmadan_doldurur()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2037000000,
              "status": "passed"
            },
            "line": 19,
            "name": "invalid giris yapildiginda mobile phone number yazisi kirmizi olur",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.invalid_giris_yapildiginda_mobile_phone_number_yazisi_kirmizi_olur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_02"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0203"
          }
        ]
      },
      {
        "line": 3,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 517000000,
              "status": "passed"
            },
            "line": 4,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 141000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:47.939Z",
        "line": 26,
        "name": "TC_0204 email adress test",
        "description": "",
        "id": "us-02-test;tc-0204-email-adress-test;emailler;2",
        "after": [
          {
            "result": {
              "duration": 418000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 233000000,
              "status": "passed"
            },
            "line": 22,
            "name": "kullanici \"alicangmail.com\" adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"alicangmail.com\"",
                  "offset": 10
                }
              ],
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_adresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "line": 23,
            "name": "kullanici invalid email girdiginde hata mesajini gorur",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_invalid_email_girdiginde_hata_mesajini_gorur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_02"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0204"
          }
        ]
      },
      {
        "line": 3,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 463000000,
              "status": "passed"
            },
            "line": 4,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 138000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:49.536Z",
        "line": 27,
        "name": "TC_0204 email adress test",
        "description": "",
        "id": "us-02-test;tc-0204-email-adress-test;emailler;3",
        "after": [
          {
            "result": {
              "duration": 366000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 184000000,
              "status": "passed"
            },
            "line": 22,
            "name": "kullanici \"alican@gmail\" adresini girer",
            "match": {
              "arguments": [
                {
                  "val": "\"alican@gmail\"",
                  "offset": 10
                }
              ],
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_adresini_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93000000,
              "status": "passed"
            },
            "line": 23,
            "name": "kullanici invalid email girdiginde hata mesajini gorur",
            "match": {
              "location": "gmibank.stepdefinitions.US_02_Step_Definitions.kullanici_invalid_email_girdiginde_hata_mesajini_gorur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_02"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0204"
          }
        ]
      }
    ],
    "name": "US_02 Test",
    "description": "",
    "id": "us-02-test",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_02.feature",
    "tags": [
      {
        "name": "@US_02",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 9
        }
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 420000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 111000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:50.995Z",
        "line": 18,
        "name": "TC_0301  Positiv Test  at least 1 lowercase char for stronger password and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0301--positiv-test--at-least-1-lowercase-char-for-stronger-password-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 348000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2246000000,
              "status": "passed"
            },
            "line": 13,
            "name": "bir user sent data to new Password Box \"Betul2015\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015\"",
                  "offset": 39
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.bir_user_sent_data_to_new_Password_Box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0301"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 572000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 198000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:54.346Z",
        "line": 19,
        "name": "TC_0301  Positiv Test  at least 1 lowercase char for stronger password and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0301--positiv-test--at-least-1-lowercase-char-for-stronger-password-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 348000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2214000000,
              "status": "passed"
            },
            "line": 13,
            "name": "bir user sent data to new Password Box \"BeT201\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BeT201\"",
                  "offset": 39
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.bir_user_sent_data_to_new_Password_Box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0301"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 461000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:11:57.895Z",
        "line": 29,
        "name": "TC_0302 Negative Test at least 1 lowercase char for stronger password and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0302-negative-test-at-least-1-lowercase-char-for-stronger-password-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 452000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2280000000,
              "status": "passed"
            },
            "line": 24,
            "name": "iki user sent to newPassword Box \"BETUL2015!!!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BETUL2015!!!\"",
                  "offset": 33
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.iki_user_sent_to_newPassword_Box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0302"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 989000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 143000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 277000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:01.392Z",
        "line": 30,
        "name": "TC_0302 Negative Test at least 1 lowercase char for stronger password and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0302-negative-test-at-least-1-lowercase-char-for-stronger-password-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 356000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2325000000,
              "status": "passed"
            },
            "line": 24,
            "name": "iki user sent to newPassword Box \"BET201!.....B\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BET201!.....B\"",
                  "offset": 33
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.iki_user_sent_to_newPassword_Box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0302"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1127000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 151000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:05.506Z",
        "line": 39,
        "name": "TC_0303 Positiv Test at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0303-positiv-test-at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 362000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2243000000,
              "status": "passed"
            },
            "line": 34,
            "name": "uc user sent to newPass box \"Betul2015.\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.uc_user_sent_to_newPass_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0303"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 685000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:09.579Z",
        "line": 40,
        "name": "TC_0303 Positiv Test at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0303-positiv-test-at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2268000000,
              "status": "passed"
            },
            "line": 34,
            "name": "uc user sent to newPass box \"BeT201!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BeT201!\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.uc_user_sent_to_newPass_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0303"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 416000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 141000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 278000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:13.296Z",
        "line": 41,
        "name": "TC_0303 Positiv Test at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0303-positiv-test-at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 350000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2195000000,
              "status": "passed"
            },
            "line": 34,
            "name": "uc user sent to newPass box \"aBE3.\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"aBE3.\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.uc_user_sent_to_newPass_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0303"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 488000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 152000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 151000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:16.690Z",
        "line": 42,
        "name": "TC_0303 Positiv Test at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0303-positiv-test-at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;5",
        "after": [
          {
            "result": {
              "duration": 354000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2202000000,
              "status": "passed"
            },
            "line": 34,
            "name": "uc user sent to newPass box \"bet2015\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"bet2015\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.uc_user_sent_to_newPass_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0303"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 438000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:20.051Z",
        "line": 43,
        "name": "TC_0303 Positiv Test at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0303-positiv-test-at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;6",
        "after": [
          {
            "result": {
              "duration": 352000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2207000000,
              "status": "passed"
            },
            "line": 34,
            "name": "uc user sent to newPass box \"BET2015a\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BET2015a\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.uc_user_sent_to_newPass_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0303"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 442000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 177000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:23.382Z",
        "line": 51,
        "name": "TC_0304 Negativ test  at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0304-negativ-test--at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 353000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2245000000,
              "status": "passed"
            },
            "line": 47,
            "name": "dort user sent to newPassword field \"BETUL2015.\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BETUL2015.\"",
                  "offset": 36
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.dort_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0304"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 810000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 199000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:26.791Z",
        "line": 52,
        "name": "TC_0304 Negativ test  at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0304-negativ-test--at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 345000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2202000000,
              "status": "passed"
            },
            "line": 47,
            "name": "dort user sent to newPassword field \"BT201!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BT201!\"",
                  "offset": 36
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.dort_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0304"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 584000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 216000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 178000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:30.535Z",
        "line": 53,
        "name": "TC_0304 Negativ test  at least 1 lowercase char and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0304-negativ-test--at-least-1-lowercase-char-and-see-the-level-chart-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 346000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2304000000,
              "status": "passed"
            },
            "line": 47,
            "name": "dort user sent to newPassword field \"BT2015434!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BT2015434!\"",
                  "offset": 36
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.dort_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0304"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 502000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 183000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:34.177Z",
        "line": 61,
        "name": "TC_0305 Positiv test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0305-positiv-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 388000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12256000000,
              "status": "passed"
            },
            "line": 57,
            "name": "bes user sent to newPassword field \"Bet2a.!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Bet2a.!\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.bes_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0305"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 577000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 204000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 140000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:12:47.702Z",
        "line": 62,
        "name": "TC_0305 Positiv test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0305-positiv-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 415000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12263000000,
              "status": "passed"
            },
            "line": 57,
            "name": "bes user sent to newPassword field \"Ba!2C4\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Ba!2C4\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.bes_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0305"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 588000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 212000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:01.317Z",
        "line": 63,
        "name": "TC_0305 Positiv test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0305-positiv-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 389000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12290000000,
              "status": "passed"
            },
            "line": 57,
            "name": "bes user sent to newPassword field \"345a!B\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"345a!B\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.bes_user_sent_to_newPassword_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0305"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 601000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 199000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 178000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:14.980Z",
        "line": 73,
        "name": "TC_0306 Negativ test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0306-negativ-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 434000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2227000000,
              "status": "passed"
            },
            "line": 68,
            "name": "alti user sent to newPassword  \"BETULa.\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BETULa.\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.alti_user_sent_to_newPassword_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0306"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 620000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 202000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:18.635Z",
        "line": 74,
        "name": "TC_0306 Negativ test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0306-negativ-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 353000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2376000000,
              "status": "passed"
            },
            "line": 68,
            "name": "alti user sent to newPassword  \"Besdfbbdf!!!!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Besdfbbdf!!!!\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.alti_user_sent_to_newPassword_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0306"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 416000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 138000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 216000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:22.353Z",
        "line": 75,
        "name": "TC_0306 Negativ test at least 1 digit and see the level chart change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0306-negativ-test-at-least-1-digit-and-see-the-level-chart-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 349000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2291000000,
              "status": "passed"
            },
            "line": 68,
            "name": "alti user sent to newPassword  \"BeTdfsdgb!!!..!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BeTdfsdgb!!!..!\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.alti_user_sent_to_newPassword_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0306"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 456000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 106000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 194000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:25.774Z",
        "line": 85,
        "name": "TC_0307 Positiv test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0307-positiv-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 347000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12274000000,
              "status": "passed"
            },
            "line": 80,
            "name": "yedi user sent to newPASWORD box \"BE24La.\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BE24La.\"",
                  "offset": 33
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.yedi_user_sent_to_newPASWORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0307"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 565000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 197000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:39.170Z",
        "line": 86,
        "name": "TC_0307 Positiv test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0307-positiv-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 360000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12300000000,
              "status": "passed"
            },
            "line": 80,
            "name": "yedi user sent to newPASWORD box \"Bet2!a2\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Bet2!a2\"",
                  "offset": 33
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.yedi_user_sent_to_newPASWORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0307"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 470000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 153000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 135000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:13:52.696Z",
        "line": 87,
        "name": "TC_0307 Positiv test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0307-positiv-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 375000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12317000000,
              "status": "passed"
            },
            "line": 80,
            "name": "yedi user sent to newPASWORD box \"BeTdf34dgb!!..!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BeTdf34dgb!!..!\"",
                  "offset": 33
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.yedi_user_sent_to_newPASWORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0307"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 465000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 106000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 147000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:14:06.165Z",
        "line": 96,
        "name": "TC_0308 Negativ test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0308-negativ-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;2",
        "after": [
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12286000000,
              "status": "passed"
            },
            "line": 91,
            "name": "sekiz user sent to newPASvORD box \"BETULa23\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BETULa23\"",
                  "offset": 34
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.sekiz_user_sent_to_newPASvORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0308"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 493000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 148000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:14:19.565Z",
        "line": 97,
        "name": "TC_0308 Negativ test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0308-negativ-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;3",
        "after": [
          {
            "result": {
              "duration": 398000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12238000000,
              "status": "passed"
            },
            "line": 91,
            "name": "sekiz user sent to newPASvORD box \"Bet2\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Bet2\"",
                  "offset": 34
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.sekiz_user_sent_to_newPASvORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0308"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 174000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:14:33.022Z",
        "line": 98,
        "name": "TC_0308 Negativ test at least 1 special char and see the level bar change accordingly",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0308-negativ-test-at-least-1-special-char-and-see-the-level-bar-change-accordingly;;4",
        "after": [
          {
            "result": {
              "duration": 352000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12254000000,
              "status": "passed"
            },
            "line": 91,
            "name": "sekiz user sent to newPASvORD box \"BeTd35\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"BeTd35\"",
                  "offset": 34
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.sekiz_user_sent_to_newPASvORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0308"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 195000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:14:46.411Z",
        "line": 109,
        "name": "TC_0309 Positiv Test  at least 7 chars for a stronger password",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0309-positiv-test--at-least-7-chars-for-a-stronger-password;;2",
        "after": [
          {
            "result": {
              "duration": 345000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12316000000,
              "status": "passed"
            },
            "line": 104,
            "name": "dokuz user sent to newPassWORD box \"Be2.!Al\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Be2.!Al\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.dokuz_user_sent_to_newPassWORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0309"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:14:59.930Z",
        "line": 110,
        "name": "TC_0309 Positiv Test  at least 7 chars for a stronger password",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0309-positiv-test--at-least-7-chars-for-a-stronger-password;;3",
        "after": [
          {
            "result": {
              "duration": 357000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12342000000,
              "status": "passed"
            },
            "line": 104,
            "name": "dokuz user sent to newPassWORD box \"Bet2a!.a345\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Bet2a!.a345\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.dokuz_user_sent_to_newPassWORD_box_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0309"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:13.592Z",
        "line": 121,
        "name": "TC_0310 Negativ Test  at least 7 chars for a stronger password",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0310-negativ-test--at-least-7-chars-for-a-stronger-password;;2",
        "after": [
          {
            "result": {
              "duration": 352000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12285000000,
              "status": "passed"
            },
            "line": 116,
            "name": "on user sent to newPass field \"Be2.!A\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Be2.!A\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.on_user_sent_to_newPass_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0310"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 510000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 201000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:27.038Z",
        "line": 122,
        "name": "TC_0310 Negativ Test  at least 7 chars for a stronger password",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0310-negativ-test--at-least-7-chars-for-a-stronger-password;;3",
        "after": [
          {
            "result": {
              "duration": 355000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12208000000,
              "status": "passed"
            },
            "line": 116,
            "name": "on user sent to newPass field \"Bet2a\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"Bet2a\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.on_user_sent_to_newPass_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0310"
          }
        ]
      },
      {
        "line": 5,
        "name": "user register gmibank hopage click and reache",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici bir user olarak acilan menuden register linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_register_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:40.504Z",
        "line": 123,
        "name": "TC_0310 Negativ Test  at least 7 chars for a stronger password",
        "description": "",
        "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode;tc-0310-negativ-test--at-least-7-chars-for-a-stronger-password;;4",
        "after": [
          {
            "result": {
              "duration": 386000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12279000000,
              "status": "passed"
            },
            "line": 116,
            "name": "on user sent to newPass field \"aB2!\" and verify the level chart",
            "match": {
              "arguments": [
                {
                  "val": "\"aB2!\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_03_Step_Definitions.on_user_sent_to_newPass_field_and_verify_the_level_chart(java.lang.String)"
            },
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "name": "@US03"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0310"
          }
        ]
      }
    ],
    "name": "US_003 Registration page should restrict password usage to a secure and high level passcode",
    "description": "",
    "id": "us-003-registration-page-should-restrict-password-usage-to-a-secure-and-high-level-passcode",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_03.feature",
    "tags": [
      {
        "name": "@US03",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 7
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 735000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden login linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_login_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:54.116Z",
        "line": 10,
        "name": "TC_0401 success message to login",
        "description": "",
        "id": "us-04-succes-login-with-valid-credentials;tc-0401-success-message-to-login",
        "after": [
          {
            "result": {
              "duration": 403000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 113000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Kullanici acilan Sign in sayfasinda username textboxina \"AAbc398\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"AAbc398\"",
                  "offset": 56
                }
              ],
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_acilan_Sign_in_sayfasinda_username_textboxina_girer(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 12,
            "name": "Kullanici acilan Sign in sayfasinda password textboxina \"A1b2C3\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 56
                }
              ],
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_acilan_Sign_in_sayfasinda_password_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132000000,
              "status": "passed"
            },
            "line": 13,
            "name": "Kullanici acilan Sign in sayfasinda Login butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_acilan_Sign_in_sayfasinda_Login_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 683000000,
              "status": "passed"
            },
            "line": 14,
            "name": "Kullanici ismini kayit oldugu ismini acilan sayfada goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_ismini_kayit_oldugu_ismini_acilan_sayfada_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_04"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0401"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 507000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 195000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 148000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden login linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_bir_user_olarak_acilan_menuden_login_linkine_tiklar()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:56.670Z",
        "line": 17,
        "name": "TC_0402 cancel login option",
        "description": "",
        "id": "us-04-succes-login-with-valid-credentials;tc-0402-cancel-login-option",
        "after": [
          {
            "result": {
              "duration": 369000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 632000000,
              "status": "passed"
            },
            "line": 18,
            "name": "Kullanici acilan Sign in sayfasinda Cancel butonunu goruntuler",
            "match": {
              "location": "gmibank.stepdefinitions.US_04_Step_Definitions.kullanici_acilan_Sign_in_sayfasinda_Cancel_butonunu_goruntuler()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_04"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0402"
          }
        ]
      }
    ],
    "name": "US_04 succes login with valid credentials",
    "description": "",
    "id": "us-04-succes-login-with-valid-credentials",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_04.feature",
    "tags": [
      {
        "name": "@US_04",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 25293000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:15:58.535Z",
        "line": 18,
        "name": "User cannot login with invalid username validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-validating-the-error-message;;2",
        "after": [
          {
            "result": {
              "duration": 418000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 964000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 183000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1145000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 93000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters admin username \"aaaaaaa\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 142000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters admin password \"Betul2015\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 131000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1051000000,
              "status": "passed"
            },
            "line": 15,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0501"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 582000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:27.975Z",
        "line": 19,
        "name": "User cannot login with invalid username validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-validating-the-error-message;;3",
        "after": [
          {
            "result": {
              "duration": 412000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 647000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 190000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1111000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters admin username \"adkssla\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 143000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters admin password \"Betul2015\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 103000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1049000000,
              "status": "passed"
            },
            "line": 15,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0501"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 621000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:32.316Z",
        "line": 20,
        "name": "User cannot login with invalid username validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-validating-the-error-message;;4",
        "after": [
          {
            "result": {
              "duration": 388000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 593000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1113000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters admin username \"iso1945\"",
            "match": {
              "arguments": [
                {
                  "val": "\"iso1945\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 117000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters admin password \"Betul2015\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 104000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1054000000,
              "status": "passed"
            },
            "line": 15,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0501"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 471000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:36.598Z",
        "line": 21,
        "name": "User cannot login with invalid username validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-validating-the-error-message;;5",
        "after": [
          {
            "result": {
              "duration": 401000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 534000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1121000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters admin username \"12jksks\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12jksks\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 114000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters admin password \"Betul2015\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "line": 14,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1050000000,
              "status": "passed"
            },
            "line": 15,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0501"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 571000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:40.692Z",
        "line": 34,
        "name": "User cannot login with invalid password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-password-validating-the-error-message;;2",
        "after": [
          {
            "result": {
              "duration": 415000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 710000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 166000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1107000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user enters admin username \"asilcan\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asilcan\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 169000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user enters admin password \"aaaaaaa25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa25\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1052000000,
              "status": "passed"
            },
            "line": 31,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0502"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 628000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:45.099Z",
        "line": 35,
        "name": "User cannot login with invalid password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-password-validating-the-error-message;;3",
        "after": [
          {
            "result": {
              "duration": 417000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 670000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 144000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1108000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user enters admin username \"asilcan\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asilcan\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 123000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user enters admin password \"adkssla41\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla41\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1050000000,
              "status": "passed"
            },
            "line": 31,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0502"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 620000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:16:49.438Z",
        "line": 36,
        "name": "User cannot login with invalid password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-password-validating-the-error-message;;4",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 380000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 101000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1111000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 88000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user enters admin username \"asilcan\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asilcan\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 147000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user enters admin password \"iso194578\"",
            "match": {
              "arguments": [
                {
                  "val": "\"iso194578\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 130000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong[.\u003d\u0027Failed to sign in!\u0027]\"}\n  (Session info: chrome\u003d86.0.4240.198)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\n*** Element info: {Using\u003dxpath, value\u003d//strong[.\u003d\u0027Failed to sign in!\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.isDisplayed(Unknown Source)\r\n\tat gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message(US_05_Step_Definitions.java:15)\r\n\tat ✽.assert error message(file:///C:/Users/fikir/IdeaProjects/gmibankproject/src/test/resources/features/us_05.feature:31)\r\n",
              "duration": 11042000000,
              "status": "failed"
            },
            "line": 31,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0502"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 620000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:03.663Z",
        "line": 37,
        "name": "User cannot login with invalid password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-password-validating-the-error-message;;5",
        "after": [
          {
            "result": {
              "duration": 406000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 732000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1108000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user enters admin username \"asilcan\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asilcan\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 121000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user enters admin password \"12jksks39\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12jksks39\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1049000000,
              "status": "passed"
            },
            "line": 31,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0502"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 504000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:08.078Z",
        "line": 50,
        "name": "User cannot login with invalid username and password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-and-password-validating-the-error-message;;2",
        "after": [
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 868000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1149000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 146000000,
              "status": "passed"
            },
            "line": 44,
            "name": "user enters admin username \"aaaaaaa25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa25\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 178000000,
              "status": "passed"
            },
            "line": 45,
            "name": "user enters admin password \"adkssla41\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla41\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 123000000,
              "status": "passed"
            },
            "line": 46,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1049000000,
              "status": "passed"
            },
            "line": 47,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0503"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 504000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:12.709Z",
        "line": 51,
        "name": "User cannot login with invalid username and password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-and-password-validating-the-error-message;;3",
        "after": [
          {
            "result": {
              "duration": 437000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 552000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 157000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1107000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 103000000,
              "status": "passed"
            },
            "line": 44,
            "name": "user enters admin username \"iso194578\"",
            "match": {
              "arguments": [
                {
                  "val": "\"iso194578\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 111000000,
              "status": "passed"
            },
            "line": 45,
            "name": "user enters admin password \"haksk7852\"",
            "match": {
              "arguments": [
                {
                  "val": "\"haksk7852\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 94000000,
              "status": "passed"
            },
            "line": 46,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1043000000,
              "status": "passed"
            },
            "line": 47,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0503"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 759000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:16.838Z",
        "line": 52,
        "name": "User cannot login with invalid username and password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-and-password-validating-the-error-message;;4",
        "after": [
          {
            "result": {
              "duration": 409000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 599000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 189000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1101000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "line": 44,
            "name": "user enters admin username \"12jksks39\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12jksks39\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "line": 45,
            "name": "user enters admin password \"aaaaaaa25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa25\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 100000000,
              "status": "passed"
            },
            "line": 46,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1044000000,
              "status": "passed"
            },
            "line": 47,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0503"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 467000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:21.233Z",
        "line": 53,
        "name": "User cannot login with invalid username and password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-and-password-validating-the-error-message;;5",
        "after": [
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 507000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1114000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97000000,
              "status": "passed"
            },
            "line": 44,
            "name": "user enters admin username \"adkssla41\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla41\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 122000000,
              "status": "passed"
            },
            "line": 45,
            "name": "user enters admin password \"fjfjfl781\"",
            "match": {
              "arguments": [
                {
                  "val": "\"fjfjfl781\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 102000000,
              "status": "passed"
            },
            "line": 46,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1048000000,
              "status": "passed"
            },
            "line": 47,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0503"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 558000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:25.254Z",
        "line": 54,
        "name": "User cannot login with invalid username and password validating the error message",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-cannot-login-with-invalid-username-and-password-validating-the-error-message;;6",
        "after": [
          {
            "result": {
              "duration": 416000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 713000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 168000000,
              "status": "passed"
            },
            "line": 42,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1115000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "line": 44,
            "name": "user enters admin username \"iso194578\"",
            "match": {
              "arguments": [
                {
                  "val": "\"iso194578\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96000000,
              "status": "passed"
            },
            "line": 45,
            "name": "user enters admin password \"12jksks39\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12jksks39\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "line": 46,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1046000000,
              "status": "passed"
            },
            "line": 47,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0503"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 601000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:29.555Z",
        "line": 57,
        "name": "User with invalid credentials should be given an option to reset their password",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-with-invalid-credentials-should-be-given-an-option-to-reset-their-password",
        "after": [
          {
            "result": {
              "duration": 416000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 687000000,
              "status": "passed"
            },
            "line": 58,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "line": 59,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1130000000,
              "status": "passed"
            },
            "line": 60,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "line": 61,
            "name": "user enters admin username \"aaaaaaa25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa25\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 104000000,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters admin password \"adkssla41\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla41\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "line": 63,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1043000000,
              "status": "passed"
            },
            "line": 64,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "line": 65,
            "name": "user click reset button",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.userClickResetButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 152000000,
              "status": "passed"
            },
            "line": 66,
            "name": "user write invalid mail",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.userWriteInvalidMail()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "line": 67,
            "name": "user click submit button",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.userClickSubmitButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "line": 68,
            "name": "assert succesful message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assertSuccesfulMessage()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0504"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 573000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:34.306Z",
        "line": 71,
        "name": "User should be given the option to navigate to registration page if they did not register yet",
        "description": "",
        "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials;user-should-be-given-the-option-to-navigate-to-registration-page-if-they-did-not-register-yet",
        "after": [
          {
            "result": {
              "duration": 419000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 756000000,
              "status": "passed"
            },
            "line": 72,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 180000000,
              "status": "passed"
            },
            "line": 73,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1135000000,
              "status": "passed"
            },
            "line": 74,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "line": 75,
            "name": "user enters admin username \"aaaaaaa25\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aaaaaaa25\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 124000000,
              "status": "passed"
            },
            "line": 76,
            "name": "user enters admin password \"adkssla41\"",
            "match": {
              "arguments": [
                {
                  "val": "\"adkssla41\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 98000000,
              "status": "passed"
            },
            "line": 77,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1047000000,
              "status": "passed"
            },
            "line": 78,
            "name": "assert error message",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assert_error_message()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "line": 79,
            "name": "assert register button",
            "match": {
              "location": "gmibank.stepdefinitions.US_05_Step_Definitions.assertRegisterButton()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_05"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0505"
          }
        ]
      }
    ],
    "name": "US_05 Login page should not be accessible with invalid credentials",
    "description": "",
    "id": "us-05-login-page-should-not-be-accessible-with-invalid-credentials",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_05.feature",
    "tags": [
      {
        "name": "@US_05",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 703000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 179000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1067000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3111000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:38.784Z",
        "line": 15,
        "name": "TC_0601 user settings test",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-0601-user-settings-test",
        "after": [
          {
            "result": {
              "duration": 393000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 161000000,
              "status": "passed"
            },
            "line": 16,
            "name": "\"Resit\" must be entered as first name",
            "match": {
              "arguments": [
                {
                  "val": "\"Resit\"",
                  "offset": 0
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.must_be_entered_as_first_name(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "line": 17,
            "name": "\"Heim\" must be entered as last name",
            "match": {
              "arguments": [
                {
                  "val": "\"Heim\"",
                  "offset": 0
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.must_be_entered_as_last_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "line": 18,
            "name": "\"almanbaki@yandex.com\" must be entered as email",
            "match": {
              "arguments": [
                {
                  "val": "\"almanbaki@yandex.com\"",
                  "offset": 0
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.must_be_entered_as_first_email(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "line": 19,
            "name": "\"English\" must be selected as language",
            "match": {
              "arguments": [
                {
                  "val": "\"English\"",
                  "offset": 0
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.mustBeSelectedAsLanguage(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180000000,
              "status": "passed"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0601"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 477000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 93000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1127000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 533000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3108000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:46.158Z",
        "line": 28,
        "name": "TC_002 There should be 2 languages available",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-002-there-should-be-2-languages-available;;2",
        "after": [
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 137000000,
              "status": "passed"
            },
            "line": 24,
            "name": "user select \"0\" language",
            "match": {
              "arguments": [
                {
                  "val": "\"0\"",
                  "offset": 12
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_select_language(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 129000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0602"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 180000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1119000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 149000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 121000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 510000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3098000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:52.438Z",
        "line": 29,
        "name": "TC_002 There should be 2 languages available",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-002-there-should-be-2-languages-available;;3",
        "after": [
          {
            "result": {
              "duration": 399000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 283000000,
              "status": "passed"
            },
            "line": 24,
            "name": "user select \"1\" language",
            "match": {
              "arguments": [
                {
                  "val": "\"1\"",
                  "offset": 12
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_select_language(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 191000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0602"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1122000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 520000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3078000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:17:59.170Z",
        "line": 33,
        "name": "TC_0603 update firstname",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-0603-update-firstname",
        "after": [
          {
            "result": {
              "duration": 391000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 118000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user clears first name textbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userClearsFirstNameTextbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 162000000,
              "status": "passed"
            },
            "line": 35,
            "name": "user updates first name as \"Kolay\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Kolay\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_updates_first_name_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 36,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0603"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 511000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1109000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 550000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3111000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:05.717Z",
        "line": 40,
        "name": "TC_0604 update lastname",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-0604-update-lastname",
        "after": [
          {
            "result": {
              "duration": 401000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 113000000,
              "status": "passed"
            },
            "line": 41,
            "name": "user clears last name textbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userClearsLastNameTextbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 149000000,
              "status": "passed"
            },
            "line": 42,
            "name": "User updates last name as \"Gelsin\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Gelsin\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_updates_last_name_as(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0604"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 498000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1101000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1164000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3113000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:12.338Z",
        "line": 47,
        "name": "TC_0605 positive test update email",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-0605-positive-test-update-email",
        "after": [
          {
            "result": {
              "duration": 382000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 113000000,
              "status": "passed"
            },
            "line": 48,
            "name": "user clears email textbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userClearsEmailTextbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 191000000,
              "status": "passed"
            },
            "line": 49,
            "name": "user uses the \"@\" sign when they update their email address",
            "match": {
              "arguments": [
                {
                  "val": "\"@\"",
                  "offset": 14
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_uses_the_sign_when_they_update_their_email_address(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203000000,
              "status": "passed"
            },
            "line": 50,
            "name": "user uses the new \".com\" sign when they update their email address",
            "match": {
              "arguments": [
                {
                  "val": "\".com\"",
                  "offset": 18
                }
              ],
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userUsesTheNewSignWhenTheyUpdateTheirEmailAddress(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122000000,
              "status": "passed"
            },
            "line": 51,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0605"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1132000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"aslinda\"",
            "match": {
              "arguments": [
                {
                  "val": "\"aslinda\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Alman.1234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Alman.1234\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 546000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks on the username on the top right",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_the_username_on_the_top_right()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3098000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks on user info link",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.user_clicks_on_user_info_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:19.687Z",
        "line": 55,
        "name": "TC_0606 negative test update email",
        "description": "",
        "id": "us-06-user-info-segment-should-be-editable-on-homepage;tc-0606-negative-test-update-email",
        "after": [
          {
            "result": {
              "duration": 405000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 353000000,
              "status": "passed"
            },
            "line": 56,
            "name": "user don\u0027t uses the @ sign when they update their email address",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userDonTUsesTheSignWhenTheyUpdateTheirEmailAddress()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 224000000,
              "status": "passed"
            },
            "line": 57,
            "name": "user don\u0027t uses the .com sign when they update their email address",
            "match": {
              "location": "gmibank.stepdefinitions.US_06_Step_Definitions.userDonTUsesTheComSignWhenTheyUpdateTheirEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156000000,
              "status": "passed"
            },
            "line": 58,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_06"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_0606"
          }
        ]
      }
    ],
    "name": "US_06 user info segment should be editable on Homepage",
    "description": "",
    "id": "us-06-user-info-segment-should-be-editable-on-homepage",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_06.feature",
    "tags": [
      {
        "name": "@US_06",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1189000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 212000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden signIn linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_bir_user_olarak_acilan_menuden_signIn_linkine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici username textboxina \"AAbc398\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"AAbc398\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_username_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Kullanici  password textboxina \"A1b2C3\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_password_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Kullanici signin butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_signin_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 748000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Kullanici sag ustteki insan simgesine tekrar tiklar ve userInfo basligini secer",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_sag_ustteki_insan_simgesine_tekrar_tiklar_ve_userInfo_basligini_secer()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:26.426Z",
        "line": 20,
        "name": "TC_0701 email test",
        "description": "",
        "id": "us-07-test;tc-0701-email-test;invalid-emailler;2",
        "after": [
          {
            "result": {
              "duration": 402000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 249000000,
              "status": "passed"
            },
            "line": 15,
            "name": "Kullanici email textBoxina tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_email_textBoxina_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 270000000,
              "status": "passed"
            },
            "line": 16,
            "name": "Kullanici \"abc122afhmail.com\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"abc122afhmail.com\"",
                  "offset": 10
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187000000,
              "status": "passed"
            },
            "line": 17,
            "name": "kullanici hatali email  girdiginde hata mesajini gorur",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_hatali_email_girdiginde_hata_mesajini_gorur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_07"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0701"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 555000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 145000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden signIn linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_bir_user_olarak_acilan_menuden_signIn_linkine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici username textboxina \"AAbc398\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"AAbc398\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_username_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Kullanici  password textboxina \"A1b2C3\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_password_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Kullanici signin butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_signin_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 848000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Kullanici sag ustteki insan simgesine tekrar tiklar ve userInfo basligini secer",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_sag_ustteki_insan_simgesine_tekrar_tiklar_ve_userInfo_basligini_secer()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:30.231Z",
        "line": 21,
        "name": "TC_0701 email test",
        "description": "",
        "id": "us-07-test;tc-0701-email-test;invalid-emailler;3",
        "after": [
          {
            "result": {
              "duration": 380000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "line": 15,
            "name": "Kullanici email textBoxina tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_email_textBoxina_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189000000,
              "status": "passed"
            },
            "line": 16,
            "name": "Kullanici \"abc122afh@mail\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"abc122afh@mail\"",
                  "offset": 10
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 17,
            "name": "kullanici hatali email  girdiginde hata mesajini gorur",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_hatali_email_girdiginde_hata_mesajini_gorur()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_07"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0701"
          }
        ]
      },
      {
        "line": 4,
        "name": "Kullanici bir user olarak gmibank anasayfasina gider",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "line": 5,
            "name": "Kullanici bir user olarak gmibank anasayfasina gider",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_gmibank_anasayfasina_gider()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 185000000,
              "status": "passed"
            },
            "line": 6,
            "name": "Kullanici bir user olarak sag ust kosede bulunan insan simgesine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_01_Step_Definitions.kullanici_bir_user_olarak_sag_ust_kosede_bulunan_insan_simgesine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 136000000,
              "status": "passed"
            },
            "line": 7,
            "name": "Kullanici bir user olarak acilan menuden signIn linkine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_bir_user_olarak_acilan_menuden_signIn_linkine_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "line": 8,
            "name": "Kullanici username textboxina \"AAbc398\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"AAbc398\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_username_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109000000,
              "status": "passed"
            },
            "line": 9,
            "name": "Kullanici  password textboxina \"A1b2C3\" girer",
            "match": {
              "arguments": [
                {
                  "val": "\"A1b2C3\"",
                  "offset": 31
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_password_textboxina_girer(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "line": 10,
            "name": "Kullanici signin butonuna tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_signin_butonuna_tiklar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 596000000,
              "status": "passed"
            },
            "line": 11,
            "name": "Kullanici sag ustteki insan simgesine tekrar tiklar ve userInfo basligini secer",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_sag_ustteki_insan_simgesine_tekrar_tiklar_ve_userInfo_basligini_secer()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:33.043Z",
        "line": 25,
        "name": "TC_0702 language  test",
        "description": "",
        "id": "us-07-test;tc-0702-language--test",
        "after": [
          {
            "result": {
              "duration": 373000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "line": 26,
            "name": "Kullanici language  secenegine tiklar",
            "match": {
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_language_secenegine_tiklar()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 276000000,
              "status": "passed"
            },
            "line": 27,
            "name": "Kullanici language dropDown\u0027unun icinde sadece  \"English\" veya \"Türkçe\" dilleri oldugunu gorur",
            "match": {
              "arguments": [
                {
                  "val": "\"English\"",
                  "offset": 48
                },
                {
                  "val": "\"Türkçe\"",
                  "offset": 63
                }
              ],
              "location": "gmibank.stepdefinitions.US_07_StepDefinitions.kullanici_language_dropDown_unun_icinde_sadece_veya_dilleri_oldugunu_gorur(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US_07"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0702"
          }
        ]
      }
    ],
    "name": "US_07 Test",
    "description": "",
    "id": "us-07-test",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_07.feature",
    "tags": [
      {
        "name": "@US_07",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      },
      {
        "name": "@hata",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 19
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 406000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1101000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1127000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1074000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1121000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1074000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2593000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:35.491Z",
        "line": 15,
        "name": "The old password should not be used",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;the-old-password-should-not-be-used",
        "after": [
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 554000000,
              "status": "passed"
            },
            "line": 16,
            "name": "user clicks password link and old password for three textbox \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 61
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link_and_old_password_for_three_textbox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "line": 17,
            "name": "user doesn\u0027t save",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_doesn_t_save()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 160000000,
              "status": "passed"
            },
            "line": 18,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0801"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 457000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1076000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1107000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1063000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1133000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1093000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2590000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:18:45.134Z",
        "line": 22,
        "name": "There should be at least 1 uppercase char for stronger password",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;there-should-be-at-least-1-uppercase-char-for-stronger-password",
        "after": [
          {
            "result": {
              "duration": 385000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 234000000,
              "status": "passed"
            },
            "line": 23,
            "name": "user clicks password link and writes one random uppercase",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link_and_writes_one_random_uppercase()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2148000000,
              "status": "passed"
            },
            "line": 24,
            "name": "user writes six lower cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_writes_six_lower_cases_and_sees_the_change_of_password_scales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2362000000,
              "status": "passed"
            },
            "line": 25,
            "name": "user writes six digits and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_writes_six_digits_and_sees_the_change_of_password_scales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2290000000,
              "status": "passed"
            },
            "line": 26,
            "name": "user writes six special chars and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_writes_six_special_chars_and_sees_the_change_of_password_scales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 203000000,
              "status": "passed"
            },
            "line": 27,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0802"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 436000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1078000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1148000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1086000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1110000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1120000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2585000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:19:01.290Z",
        "line": 30,
        "name": "There should be at least 1 lowercase char for stronger password",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;there-should-be-at-least-1-lowercase-char-for-stronger-password",
        "after": [
          {
            "result": {
              "duration": 396000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 131000000,
              "status": "passed"
            },
            "line": 31,
            "name": "user clicks password link and writes one random lowercase",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userClicksPasswordLinkAndWritesOneRandomLowercase()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2127000000,
              "status": "passed"
            },
            "line": 32,
            "name": "0user writes six digits and sees the change of password scales",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 0
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesSixDigitsAndSeesTheChangeOfPasswordScales(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2271000000,
              "status": "passed"
            },
            "line": 33,
            "name": "user writes six upper cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesSixUpperCasesAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2250000000,
              "status": "passed"
            },
            "line": 34,
            "name": "user writes  six special chars and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesSixSpecialCharsAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 197000000,
              "status": "passed"
            },
            "line": 35,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0803"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 504000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1097000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1147000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1100000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1115000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1097000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2566000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:19:17.241Z",
        "line": 38,
        "name": "There should be at least 1 digit char for stronger password",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;there-should-be-at-least-1-digit-char-for-stronger-password",
        "after": [
          {
            "result": {
              "duration": 366000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 226000000,
              "status": "passed"
            },
            "line": 39,
            "name": "testcasefour user clicks password link and writes one random digit",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefourUserClicksPasswordLinkAndWritesOneRandomDigit()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2112000000,
              "status": "passed"
            },
            "line": 40,
            "name": "testcasefour user writes six upper cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefourUserWritesSixUpperCasesAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2259000000,
              "status": "passed"
            },
            "line": 41,
            "name": "testcasefour user writes six special chars and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefourUserWritesSixSpecialCharsAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2218000000,
              "status": "passed"
            },
            "line": 42,
            "name": "testcasefour user writes six lower cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefourUserWritesSixLowerCasesAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 183000000,
              "status": "passed"
            },
            "line": 43,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0804"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 387000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1096000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1113000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1069000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1124000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1087000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2617000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:19:33.246Z",
        "line": 46,
        "name": "There should be at least 1 special char for stronger password",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;there-should-be-at-least-1-special-char-for-stronger-password",
        "after": [
          {
            "result": {
              "duration": 381000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 213000000,
              "status": "passed"
            },
            "line": 47,
            "name": "testcasefive user clicks password link and user writes one random special character",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefiveUserClicksPasswordLinkAndUserWritesOneRandomSpecialCharacter()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2105000000,
              "status": "passed"
            },
            "line": 48,
            "name": "testcasefive user writes six lower cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefiveUserWritesSixLowerCasesAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2259000000,
              "status": "passed"
            },
            "line": 49,
            "name": "testcasefive user writes six upper cases and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefiveUserWritesSixUpperCasesAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2251000000,
              "status": "passed"
            },
            "line": 50,
            "name": "testcasefive user writes six digits and sees the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.testcasefiveUserWritesSixDigitsAndSeesTheChangeOfPasswordScales()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 180000000,
              "status": "passed"
            },
            "line": 51,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0805"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 654000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1078000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1129000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1099000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1166000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1080000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2588000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:19:49.148Z",
        "line": 54,
        "name": "There should be at least 7 chars for a stronger password",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;there-should-be-at-least-7-chars-for-a-stronger-password",
        "after": [
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4333000000,
              "status": "passed"
            },
            "line": 55,
            "name": "user clicks password link and writes one random uppercase, lowercase, digit and special char",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userClicksPasswordLinkAndWritesOneRandomUppercaseLowercaseDigitAndSpecialChar()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4078000000,
              "status": "passed"
            },
            "line": 56,
            "name": "user writes two lower cases and doesn\u0027t see the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesTwoLowerCasesAndDoesnTSeeTheChangeOfPasswordScales()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1070000000,
              "status": "passed"
            },
            "line": 57,
            "name": "user write one more lower cases and sees to changing",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWriteOneMoreLowerCasesAndSeesToChanging()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6350000000,
              "status": "passed"
            },
            "line": 58,
            "name": "user writes two upper cases and doesn\u0027t see the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesTwoUpperCasesAndDoesnTSeeTheChangeOfPasswordScales()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3063000000,
              "status": "passed"
            },
            "line": 59,
            "name": "user write one more upper cases and sees to changing",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWriteOneMoreUpperCasesAndSeesToChanging()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6423000000,
              "status": "passed"
            },
            "line": 60,
            "name": "user writes two digits and doesn\u0027t see the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesTwoDigitsAndDoesnTSeeTheChangeOfPasswordScales()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2079000000,
              "status": "passed"
            },
            "line": 61,
            "name": "user write one more digits and sees to changing",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWriteOneMoreDigitsAndSeesToChanging()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6393000000,
              "status": "passed"
            },
            "line": 62,
            "name": "user writes two special chars and doesn\u0027t see the change of password scales",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWritesTwoSpecialCharsAndDoesnTSeeTheChangeOfPasswordScales()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2063000000,
              "status": "passed"
            },
            "line": 63,
            "name": "user write one more special chars and sees to changing",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userWriteOneMoreSpecialCharsAndSeesToChanging()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 184000000,
              "status": "passed"
            },
            "line": 64,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0806"
          }
        ]
      },
      {
        "line": 4,
        "name": "us08 user enters gmibank homepage then reaches password menu link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 449000000,
              "status": "passed"
            },
            "line": 5,
            "name": "us08 user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_gmibank_homepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1079000000,
              "status": "passed"
            },
            "line": 6,
            "name": "us08 user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_userEntry_icon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1114000000,
              "status": "passed"
            },
            "line": 7,
            "name": "us08 user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1076000000,
              "status": "passed"
            },
            "line": 8,
            "name": "us08 user enters admin username \"USER1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"USER1\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_username(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1120000000,
              "status": "passed"
            },
            "line": 9,
            "name": "us08 user enters admin password \"User123_\"",
            "match": {
              "arguments": [
                {
                  "val": "\"User123_\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_enters_admin_password(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1112000000,
              "status": "passed"
            },
            "line": 10,
            "name": "us08 user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.us08_user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2610000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks password link",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.user_clicks_password_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:20:34.376Z",
        "line": 67,
        "name": "The new password should be confirmed",
        "description": "",
        "id": "us-08-password-segment-on-homepage-should-be-editable;the-new-password-should-be-confirmed",
        "after": [
          {
            "result": {
              "duration": 385000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2356000000,
              "status": "passed"
            },
            "line": 68,
            "name": "user clicks password link and writes random password",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userClicksPasswordLinkAndWritesRandomPassword()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2025000000,
              "status": "passed"
            },
            "line": 69,
            "name": "user saves new password",
            "match": {
              "location": "gmibank.stepdefinitions.US_08_Step_Definitions.userSavesNewPassword()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 182000000,
              "status": "passed"
            },
            "line": 70,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_08"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@hata"
          },
          {
            "name": "@TC_0807"
          }
        ]
      }
    ],
    "name": "US_08 Password segment on Homepage should be editable",
    "description": "",
    "id": "us-08-password-segment-on-homepage-should-be-editable",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_08.feature",
    "tags": [
      {
        "name": "@US_08",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      },
      {
        "name": "@hata",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 19
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1108000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 101000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1155000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 106000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97000000,
              "status": "passed"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 473000000,
              "status": "passed"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94000000,
              "status": "passed"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 199000000,
              "status": "passed"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:20:47.905Z",
        "line": 17,
        "name": "Positiv Test  enter correct SSN and All information of the user filled in in the registration field should be seen",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;positiv-test--enter-correct-ssn-and-all-information-of-the-user-filled-in-in-the-registration-field-should-be-seen",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.WebDriverException: unknown error: failed to change window state to \u0027normal\u0027, current state is \u0027maximized\u0027\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 264000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16859000000,
              "status": "passed"
            },
            "line": 18,
            "name": "one Positiv user enter \"555-55-5555\" SSN  sees then firstname , lastname,email,mobilnumber,phoneNumber,addres ,ssn ,createDate",
            "match": {
              "arguments": [
                {
                  "val": "\"555-55-5555\"",
                  "offset": 23
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.one_Positiv_user_enter_SSN_sees_then_firstname_lastname_email_mobilnumber_phoneNumber_addres_ssn_createDate(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11023000000,
              "status": "passed"
            },
            "line": 19,
            "name": "two Positiv user enter \"555-55-5555\" SSN  and doesnt  see then the rest of  unfiiled Record in registration",
            "match": {
              "arguments": [
                {
                  "val": "\"555-55-5555\"",
                  "offset": 23
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.two_Positiv_user_enter_SSN_and_doesnt_see_then_the_rest_of_unfiiled_Record_in_registration(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0901"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 905000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 210000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[.\u003d\u0027Sign in\u0027]\"}\n  (Session info: chrome\u003d86.0.4240.198)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\n*** Element info: {Using\u003dxpath, value\u003d//span[.\u003d\u0027Sign in\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.click(Unknown Source)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link(US_10_Step_Definitions.java:21)\r\n\tat ✽.user clicks signIn link(file:///C:/Users/fikir/IdeaProjects/gmibankproject/src/test/resources/features/us_09.feature:7)\r\n",
              "duration": 11019000000,
              "status": "failed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:19.484Z",
        "line": 22,
        "name": "Negativ Test enter incorret SSN then there shoudl not seen any data of users",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;negativ-test-enter-incorret-ssn-then-there-shoudl-not-seen-any-data-of-users",
        "after": [
          {
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 1991000000,
              "status": "passed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 23,
            "name": "three Negativ user enter false SNN \"343-34-2323\" doesnt  see any info of users",
            "match": {
              "arguments": [
                {
                  "val": "\"343-34-2323\"",
                  "offset": 35
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.three_Negativ_user_enter_false_SNN_doesnt_see_any_info_of_users(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "four  Negativ user enter incorrect SSN \"343-22-2343\" and should see aller Error messaj",
            "match": {
              "arguments": [
                {
                  "val": "\"343-22-2343\"",
                  "offset": 39
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.four_Negativ_user_enter_incorrect_SSN_and_should_see_aller_Error_messaj(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0902"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1432000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[.\u003d\u0027Sign in\u0027]\"}\n  (Session info: chrome\u003d86.0.4240.198)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\n*** Element info: {Using\u003dxpath, value\u003d//span[.\u003d\u0027Sign in\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.click(Unknown Source)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link(US_10_Step_Definitions.java:21)\r\n\tat ✽.user clicks signIn link(file:///C:/Users/fikir/IdeaProjects/gmibankproject/src/test/resources/features/us_09.feature:7)\r\n",
              "duration": 11307000000,
              "status": "failed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:33.660Z",
        "line": 34,
        "name": ": Positiv Test enter to out of SSN search Box a data then user should not see any data of users",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;:-positiv-test-enter-to-out-of-ssn-search-box-a-data-then-user-should-not-see-any-data-of-users;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.WebDriverException: unknown error: failed to change window state to \u0027normal\u0027, current state is \u0027maximized\u0027\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 289000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "five Positv user enters to firstname Box \"silgi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"silgi\"",
                  "offset": 41
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.five_Positv_user_enters_to_firstname_Box(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "six  Possitiv user doesnt see any of info of user",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.six_Possitiv_user_doesnt_see_any_of_info_of_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0903"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 84000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath\u003d//span[.\u003d\u0027Sign in\u0027]\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: driver.version: RemoteWebDriver\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.click(Unknown Source)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link(US_10_Step_Definitions.java:21)\r\n\tat ✽.user clicks signIn link(file:///C:/Users/fikir/IdeaProjects/gmibankproject/src/test/resources/features/us_09.feature:7)\r\n",
              "duration": 1617000000,
              "status": "failed"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:47.161Z",
        "line": 35,
        "name": ": Positiv Test enter to out of SSN search Box a data then user should not see any data of users",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;:-positiv-test-enter-to-out-of-ssn-search-box-a-data-then-user-should-not-see-any-data-of-users;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 59000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "five Positv user enters to firstname Box \"alex\"",
            "match": {
              "arguments": [
                {
                  "val": "\"alex\"",
                  "offset": 41
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.five_Positv_user_enters_to_firstname_Box(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "six  Possitiv user doesnt see any of info of user",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.six_Possitiv_user_doesnt_see_any_of_info_of_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0903"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 33000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.531Z",
        "line": 36,
        "name": ": Positiv Test enter to out of SSN search Box a data then user should not see any data of users",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;:-positiv-test-enter-to-out-of-ssn-search-box-a-data-then-user-should-not-see-any-data-of-users;;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 15000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "five Positv user enters to firstname Box \"zehra\"",
            "match": {
              "arguments": [
                {
                  "val": "\"zehra\"",
                  "offset": 41
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.five_Positv_user_enters_to_firstname_Box(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 29,
            "name": "six  Possitiv user doesnt see any of info of user",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.six_Possitiv_user_doesnt_see_any_of_info_of_user()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0903"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.624Z",
        "line": 40,
        "name": "Negativ Test select from user a data and not filled data should be  displayed",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;negativ-test-select-from-user-a-data-and-not-filled-data-should-be--displayed",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "seven Negativ user selects from user Box a data",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.seven_Negativ_user_selects_from_user_Box_a_data()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 42,
            "name": "eigth Negativ user can select all usersname",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.eigth_Negativ_user_can_select_all_usersname()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "nine  Negativ user  wont be see any data of users",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.nine_Negativ_user_wont_be_see_any_data_of_users()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0904"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.677Z",
        "line": 54,
        "name": "user enter correct SSN data and use may edit or fill the data of user",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;user-enter-correct-ssn-data-and-use-may-edit-or-fill-the-data-of-user;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 47,
            "name": "ten user enter correct ssn data \"222-22-2222\"",
            "match": {
              "arguments": [
                {
                  "val": "\"222-22-2222\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.ten_user_enter_correct_ssn_data(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 48,
            "name": "eleven user fill miss box of data",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.eleven_user_fill_miss_box_of_data()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "twelve user click save",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.twelve_user_click_save()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0905"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.734Z",
        "line": 55,
        "name": "user enter correct SSN data and use may edit or fill the data of user",
        "description": "",
        "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated;user-enter-correct-ssn-data-and-use-may-edit-or-fill-the-data-of-user;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 47,
            "name": "ten user enter correct ssn data \"555-55-5555\"",
            "match": {
              "arguments": [
                {
                  "val": "\"555-55-5555\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.ten_user_enter_correct_ssn_data(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "eleven user fill miss box of data",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.eleven_user_fill_miss_box_of_data()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "twelve user click save",
            "match": {
              "location": "gmibank.stepdefinitions.US_09_Step_Definitions.twelve_user_click_save()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US009"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc0905"
          }
        ]
      }
    ],
    "name": "US_009 User can search for a new applicant by their SSN and see all their registration info populated",
    "description": "",
    "id": "us-009-user-can-search-for-a-new-applicant-by-their-ssn-and-see-all-their-registration-info-populated",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_09.feature",
    "tags": [
      {
        "name": "@US009",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.781Z",
        "line": 23,
        "name": "zipcode positive test",
        "description": "",
        "id": "us10-tests;zipcode-positive-test;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user send data to zipcode box \"123456\"",
            "match": {
              "arguments": [
                {
                  "val": "\"123456\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToZipcodeBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 19,
            "name": "user verifies valid data entry to zipcode box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToZipcodeBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1001"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.832Z",
        "line": 24,
        "name": "zipcode positive test",
        "description": "",
        "id": "us10-tests;zipcode-positive-test;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user send data to zipcode box \"asdasd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asdasd\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToZipcodeBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 19,
            "name": "user verifies valid data entry to zipcode box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToZipcodeBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1001"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.873Z",
        "line": 25,
        "name": "zipcode positive test",
        "description": "",
        "id": "us10-tests;zipcode-positive-test;;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user send data to zipcode box \"das455\"",
            "match": {
              "arguments": [
                {
                  "val": "\"das455\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToZipcodeBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "user verifies valid data entry to zipcode box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToZipcodeBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1001"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 11000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.933Z",
        "line": 26,
        "name": "zipcode positive test",
        "description": "",
        "id": "us10-tests;zipcode-positive-test;;5",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user send data to zipcode box \"4a\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4a\"",
                  "offset": 30
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToZipcodeBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 19,
            "name": "user verifies valid data entry to zipcode box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToZipcodeBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1001"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:49.998Z",
        "line": 29,
        "name": "zipcode negative test",
        "description": "",
        "id": "us10-tests;zipcode-negative-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 30,
            "name": "user send nothing to zipcode box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendNothingToZipcodeBox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "user verifies invalid zipcode data entry",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesInvalidZipcodeDataEntry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1002"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.048Z",
        "line": 44,
        "name": "adress positive test",
        "description": "",
        "id": "us10-tests;adress-positive-test;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send data to adress box \"123456\"",
            "match": {
              "arguments": [
                {
                  "val": "\"123456\"",
                  "offset": 29
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToAdressBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid data entry to adress box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToAdressBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1003"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.097Z",
        "line": 45,
        "name": "adress positive test",
        "description": "",
        "id": "us10-tests;adress-positive-test;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 8000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send data to adress box \"asdasd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asdasd\"",
                  "offset": 29
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToAdressBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid data entry to adress box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToAdressBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1003"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.141Z",
        "line": 46,
        "name": "adress positive test",
        "description": "",
        "id": "us10-tests;adress-positive-test;;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send data to adress box \"das455\"",
            "match": {
              "arguments": [
                {
                  "val": "\"das455\"",
                  "offset": 29
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToAdressBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid data entry to adress box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToAdressBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1003"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.182Z",
        "line": 47,
        "name": "adress positive test",
        "description": "",
        "id": "us10-tests;adress-positive-test;;5",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send data to adress box \"4a\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4a\"",
                  "offset": 29
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToAdressBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid data entry to adress box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToAdressBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1003"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 12000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.229Z",
        "line": 50,
        "name": "adress negative test",
        "description": "",
        "id": "us10-tests;adress-negative-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 51,
            "name": "user send nothing to adress box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendNothingToAdressBox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 52,
            "name": "user verifies invalid acress data entry",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesInvalidAcressDataEntry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 53,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1004"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.300Z",
        "line": 64,
        "name": "city positive test",
        "description": "",
        "id": "us10-tests;city-positive-test;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 18000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 59,
            "name": "user send data to city box \"123456\"",
            "match": {
              "arguments": [
                {
                  "val": "\"123456\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToCityBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 60,
            "name": "user verifies valid data entry to city box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToCityBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1005"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.367Z",
        "line": 65,
        "name": "city positive test",
        "description": "",
        "id": "us10-tests;city-positive-test;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "skipped"
            },
            "line": 59,
            "name": "user send data to city box \"asdasd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asdasd\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToCityBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "user verifies valid data entry to city box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToCityBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 61,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1005"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.417Z",
        "line": 66,
        "name": "city positive test",
        "description": "",
        "id": "us10-tests;city-positive-test;;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "skipped"
            },
            "line": 59,
            "name": "user send data to city box \"das455\"",
            "match": {
              "arguments": [
                {
                  "val": "\"das455\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToCityBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 60,
            "name": "user verifies valid data entry to city box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToCityBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1005"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.461Z",
        "line": 67,
        "name": "city positive test",
        "description": "",
        "id": "us10-tests;city-positive-test;;5",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 59,
            "name": "user send data to city box \"4a\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4a\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToCityBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "user verifies valid data entry to city box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToCityBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1005"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.512Z",
        "line": 70,
        "name": "city negative test",
        "description": "",
        "id": "us10-tests;city-negative-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 71,
            "name": "user send nothing to city box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendNothingToCityBox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 72,
            "name": "user verifies invalid city data entry",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesInvalidCityDataEntry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1006"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.557Z",
        "line": 78,
        "name": "country positive test",
        "description": "",
        "id": "us10-tests;country-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 79,
            "name": "user select a country from dropbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSelectACountryFromDropbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "user verifies a country can be selected",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesACountryCanBeSelected()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 81,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1007"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 16000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.600Z",
        "line": 90,
        "name": "state positive test",
        "description": "",
        "id": "us10-tests;state-positive-test;;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 12000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 85,
            "name": "user send data to state box \"123456\"",
            "match": {
              "arguments": [
                {
                  "val": "\"123456\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToStateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "user verifies valid data entry to state box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToStateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1008"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 10000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.681Z",
        "line": 91,
        "name": "state positive test",
        "description": "",
        "id": "us10-tests;state-positive-test;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 85,
            "name": "user send data to state box \"asdasd\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asdasd\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToStateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "user verifies valid data entry to state box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToStateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1008"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.738Z",
        "line": 92,
        "name": "state positive test",
        "description": "",
        "id": "us10-tests;state-positive-test;;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 85,
            "name": "user send data to state box \"das455\"",
            "match": {
              "arguments": [
                {
                  "val": "\"das455\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToStateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 86,
            "name": "user verifies valid data entry to state box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToStateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1008"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.777Z",
        "line": 93,
        "name": "state positive test",
        "description": "",
        "id": "us10-tests;state-positive-test;;5",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 85,
            "name": "user send data to state box \"4a\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4a\"",
                  "offset": 28
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSendDataToStateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "user verifies valid data entry to state box",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userVerifiesValidDataEntryToStateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 87,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_10"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1008"
          }
        ]
      }
    ],
    "name": "US10 tests",
    "description": "",
    "id": "us10-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_10.feature",
    "tags": [
      {
        "name": "@US_10",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.820Z",
        "line": 22,
        "name": "Create Date negative test (for in the past)",
        "description": "",
        "id": "us-11-tests;create-date-negative-test-(for-in-the-past);test-dates;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 17,
            "name": "user send data to date box \"12.12.2015 12:00\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12.12.2015 12:00\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_send_data_to_date_box(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user verifies valid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_verifies_valid_data_entry_to_Create_Date_box()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1101"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.859Z",
        "line": 23,
        "name": "Create Date negative test (for in the past)",
        "description": "",
        "id": "us-11-tests;create-date-negative-test-(for-in-the-past);test-dates;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 17,
            "name": "user send data to date box \"01.20.2020 11:15\"",
            "match": {
              "arguments": [
                {
                  "val": "\"01.20.2020 11:15\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_send_data_to_date_box(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "user verifies valid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_verifies_valid_data_entry_to_Create_Date_box()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 19,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1101"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.895Z",
        "line": 33,
        "name": "TC_1102 Date format negative test",
        "description": "",
        "id": "us-11-tests;tc-1102-date-format-negative-test;test-dates;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "user send invalid data format to date box \"01.12.2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"01.12.2020\"",
                  "offset": 42
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userSendInvalidDataFormatToDateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 29,
            "name": "user verifies invalid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userVerifiesInvalidDataEntryToCreateDateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1102"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 8000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:50.946Z",
        "line": 34,
        "name": "TC_1102 Date format negative test",
        "description": "",
        "id": "us-11-tests;tc-1102-date-format-negative-test;test-dates;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "user send invalid data format to date box \"01.20.2021 11\"",
            "match": {
              "arguments": [
                {
                  "val": "\"01.20.2021 11\"",
                  "offset": 42
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userSendInvalidDataFormatToDateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "user verifies invalid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userVerifiesInvalidDataEntryToCreateDateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1102"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.004Z",
        "line": 35,
        "name": "TC_1102 Date format negative test",
        "description": "",
        "id": "us-11-tests;tc-1102-date-format-negative-test;test-dates;4",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "user send invalid data format to date box \"11.2021 09:30\"",
            "match": {
              "arguments": [
                {
                  "val": "\"11.2021 09:30\"",
                  "offset": 42
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userSendInvalidDataFormatToDateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "user verifies invalid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userVerifiesInvalidDataEntryToCreateDateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1102"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.034Z",
        "line": 44,
        "name": "TC_1103 Date format pozitive test",
        "description": "",
        "id": "us-11-tests;tc-1103-date-format-pozitive-test;test-dates;2",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send valid data format to date box \"12.30.2020 12:00\"",
            "match": {
              "arguments": [
                {
                  "val": "\"12.30.2020 12:00\"",
                  "offset": 40
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userSendValidDataFormatToDateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid date format to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userVerifiesValidDateFormatToCreateDateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1103"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.076Z",
        "line": 45,
        "name": "TC_1103 Date format pozitive test",
        "description": "",
        "id": "us-11-tests;tc-1103-date-format-pozitive-test;test-dates;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user send valid data format to date box \"01.21.2021 11:15\"",
            "match": {
              "arguments": [
                {
                  "val": "\"01.21.2021 11:15\"",
                  "offset": 40
                }
              ],
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userSendValidDataFormatToDateBox(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 40,
            "name": "user verifies valid date format to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userVerifiesValidDateFormatToCreateDateBox()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1103"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.109Z",
        "line": 48,
        "name": "User positive test",
        "description": "",
        "id": "us-11-tests;user-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 49,
            "name": "user select a user from dropbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_select_a_user_from_dropbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "user verifies a user can be selected",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_verifies_a_user_can_be_selected()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1104"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.143Z",
        "line": 54,
        "name": "Account positive test",
        "description": "",
        "id": "us-11-tests;account-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 55,
            "name": "user select an account from dropbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_select_an_account_from_dropbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 56,
            "name": "user verifies an account can be selected",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_verifies_an_account_can_be_selected()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1105"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches sign in link and clicks user info",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"joseph37\"",
            "match": {
              "arguments": [
                {
                  "val": "\"joseph37\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"1234567\"",
            "match": {
              "arguments": [
                {
                  "val": "\"1234567\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_createNewCustomer_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.173Z",
        "line": 60,
        "name": "Zelle Enrolled option checkbox pozitive test",
        "description": "",
        "id": "us-11-tests;zelle-enrolled-option-checkbox-pozitive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 61,
            "name": "user select Zelle Enrolled checkbox",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_select_Zelle_Enrolled_checkbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 62,
            "name": "user clicks on save button",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.userClicksOnSaveButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "user verifies is selected",
            "match": {
              "location": "gmibank.stepdefinitions.US_11_Step_Definitions.user_verifies_is_enabled()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 64,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US_11"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC_1106"
          }
        ]
      }
    ],
    "name": "US_11 tests",
    "description": "",
    "id": "us-11-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_11.feature",
    "tags": [
      {
        "name": "@US_11",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.214Z",
        "line": 15,
        "name": "tc1201 user should show the account information of the customer First Name",
        "description": "",
        "id": "us12-tests;tc1201-user-should-show-the-account-information-of-the-customer-first-name",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 16,
            "name": "user should show First Name and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_First_Name_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1201"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 21000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.271Z",
        "line": 20,
        "name": "tc1202 user should show the account information of the customer Last Name",
        "description": "",
        "id": "us12-tests;tc1202-user-should-show-the-account-information-of-the-customer-last-name",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 21,
            "name": "user should show Last Name and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Last_Name_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1202"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.333Z",
        "line": 25,
        "name": "tc1203  user should show the account information of the customer Middle Initial",
        "description": "",
        "id": "us12-tests;tc1203--user-should-show-the-account-information-of-the-customer-middle-initial",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 26,
            "name": "user should show Middle Initial and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Middle_Initial_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 27,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1203"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.371Z",
        "line": 30,
        "name": "tc1204  user should show the account information of the customer Email",
        "description": "",
        "id": "us12-tests;tc1204--user-should-show-the-account-information-of-the-customer-email",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 31,
            "name": "user should show Email and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Email_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1204"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.414Z",
        "line": 35,
        "name": "tc1205 user should show the account information of the customer Mobile Phone Nummer",
        "description": "",
        "id": "us12-tests;tc1205-user-should-show-the-account-information-of-the-customer-mobile-phone-nummer",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 36,
            "name": "user should show Mobile Phone Nummer and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Mobile_Phone_Nummer_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1205"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.456Z",
        "line": 40,
        "name": "tc1206 user should show the account information of the customer Phone Nummer",
        "description": "",
        "id": "us12-tests;tc1206-user-should-show-the-account-information-of-the-customer-phone-nummer",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 41,
            "name": "user should show Phone Nummer and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Phone_Nummer_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 42,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1206"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.494Z",
        "line": 45,
        "name": "tc1207 user should show the account information of the customer Address",
        "description": "",
        "id": "us12-tests;tc1207-user-should-show-the-account-information-of-the-customer-address",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 46,
            "name": "user should show Address and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Address_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1207"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 11000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.529Z",
        "line": 50,
        "name": "tc1208 user should show the account information of the customer Create Date",
        "description": "",
        "id": "us12-tests;tc1208-user-should-show-the-account-information-of-the-customer-create-date",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 13000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 51,
            "name": "user should show Create Date and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Create_Date_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 52,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1208"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.605Z",
        "line": 55,
        "name": "tc1209 user should be an Edit Button where all customer information can be populated",
        "description": "",
        "id": "us12-tests;tc1209-user-should-be-an-edit-button-where-all-customer-information-can-be-populated",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 56,
            "name": "user should show Edit Button and verify valid",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_show_Edit_Button_and_verify_valid()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1209"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.652Z",
        "line": 61,
        "name": "tc1210 user should to create or update the Email address",
        "description": "",
        "id": "us12-tests;tc1210-user-should-to-create-or-update-the-email-address",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 62,
            "name": "user should write and new the Email address",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_write_and_new_the_Email_address()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 63,
            "name": "user click Save Button",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_click_Save_Button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "user verifies translation not found[gmiBankBackendApp.tPCustomer.updated",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_verifies_translation_not_found_gmiBankBackendApp_tPCustomer_updated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1210"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.692Z",
        "line": 68,
        "name": "tc1211 user should to create or update the Mobile Phone Nummer",
        "description": "",
        "id": "us12-tests;tc1211-user-should-to-create-or-update-the-mobile-phone-nummer",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 69,
            "name": "user should write and new the Mobile Phone Nummer",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_write_and_new_the_Mobile_Phone_Nummer()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 70,
            "name": "user click Save one Button",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.userClickSaveOneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "user verifies translation not found[gmiBankBackendApp.tPCustomer.updated",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_verifies_translation_not_found_gmiBankBackendApp_tPCustomer_updated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1211"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.727Z",
        "line": 75,
        "name": "tc1212 user should to create or update the Phone Nummer",
        "description": "",
        "id": "us12-tests;tc1212-user-should-to-create-or-update-the-phone-nummer",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 76,
            "name": "user should write and new the Phone Nummer",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_write_and_new_the_Phone_Nummer()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "user click Save two Button",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.userClickSaveTwoButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "user verifies translation not found[gmiBankBackendApp.tPCustomer.updated",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_verifies_translation_not_found_gmiBankBackendApp_tPCustomer_updated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1212"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.759Z",
        "line": 82,
        "name": "tc1213 user should to create or update the Address",
        "description": "",
        "id": "us12-tests;tc1213-user-should-to-create-or-update-the-address",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 83,
            "name": "user should write and new the Address",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_should_write_and_new_the_Address()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 84,
            "name": "user click Save three Button",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.userClickSaveThreeButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 85,
            "name": "user verifies translation not found[gmiBankBackendApp.tPCustomer.updated",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_verifies_translation_not_found_gmiBankBackendApp_tPCustomer_updated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1213"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageCostomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_manageCostomers_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.794Z",
        "line": 89,
        "name": "tc1214 user should delete a customer but seeing a message if the user is sure about deletion",
        "description": "",
        "id": "us12-tests;tc1214-user-should-delete-a-customer-but-seeing-a-message-if-the-user-is-sure-about-deletion",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 90,
            "name": "user click Delete Button",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_click_Delete_Button()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "user verifies Are you sure you want to delete Customer",
            "match": {
              "location": "gmibank.stepdefinitions.US_12_Step_Definitions.user_verifies_Are_you_sure_you_want_to_delete_Customer()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US12"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1214"
          }
        ]
      }
    ],
    "name": "US12 tests",
    "description": "",
    "id": "us12-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_12.feature",
    "tags": [
      {
        "name": "@US12",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 7
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageAccounts link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_manageAccounts_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_createNewAccount_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.820Z",
        "line": 16,
        "name": "user enter Description",
        "description": "",
        "id": "us13-tests;user-enter-description",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 9000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 17,
            "name": "user click Description",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.one_user_click_Description()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "user click Balance",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.twoUserClickBalance()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "user sees required message",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.threeUserSeesRequiredMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US13"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1301"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageAccounts link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_manageAccounts_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_createNewAccount_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.860Z",
        "line": 24,
        "name": "user should provide a balance as a Dollar",
        "description": "",
        "id": "us13-tests;user-should-provide-a-balance-as-a-dollar",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 25,
            "name": "user create as a dollar account \"100\" and verify",
            "match": {
              "arguments": [
                {
                  "val": "\"100\"",
                  "offset": 32
                }
              ],
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.oneUserTheFirstTimeAccountCreationAsDollarAndVerifieData(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 26,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US13"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1302"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageAccounts link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_manageAccounts_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_createNewAccount_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.908Z",
        "line": 29,
        "name": "User can select an account type as CHECKING, SAVING, CREDIT_CARD or INVESTING",
        "description": "",
        "id": "us13-tests;user-can-select-an-account-type-as-checking--saving--credit-card-or-investing",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 1000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 30,
            "name": "user select an acount as CHECKING and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userSelectAnAcountAsCHECKINGAndVerifieData()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 31,
            "name": "user select an acount as a SAVING and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userSelectAnAcountAsASAVINGAndVerifieData()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "user select an acount as a CREDIT_CARD and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userSelectAnAcountAsACREDIT_CARDAndVerifieData()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 33,
            "name": "user select an acount as a INVESTING and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userSelectAnAcountAsAINVESTINGAndVerifieData()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US13"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1303"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 7000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageAccounts link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_manageAccounts_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_createNewAccount_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.947Z",
        "line": 37,
        "name": "User should account status defined as ACTIVE, SUSPENDED or CLOSED",
        "description": "",
        "id": "us13-tests;user-should-account-status-defined-as-active--suspended-or-closed",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 38,
            "name": "user click Account Status Type definied as a ACTIVE and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userClickAccountStatusTypeDefiniedAsAACTIVEAndVerifiesData()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user click Account Status Type definied as a  SUESPENDED and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userClickAccountStatusTypeDefiniedAsASUSPENDENDEDAndVerifiesData()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "user click Account Status Type definied as a  CLOSED and verify",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userClickAccountStatusTypeDefiniedAsACLOSEDAndVerifiesData()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US13"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1304"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"sametyaprak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sametyaprak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Ankara06\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ankara06\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 12,
            "name": "user clicks manageAccounts link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_manageAccounts_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user clicks createNewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.user_clicks_createNewAccount_link()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:51.978Z",
        "line": 44,
        "name": "User can select an employee from the drop-down",
        "description": "",
        "id": "us13-tests;user-can-select-an-employee-from-the-drop-down",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 45,
            "name": "user select Employee and verify the selectet Employee",
            "match": {
              "location": "gmibank.stepdefinitions.US_13_Step_Definitions.userSelectEmployeeAndVerifeiTheSelectetEmployee()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 46,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@US13"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1305"
          }
        ]
      }
    ],
    "name": "US13 tests",
    "description": "",
    "id": "us13-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_13.feature",
    "tags": [
      {
        "name": "@US13",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 7
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"karak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"karak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"DJabc21\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJabc21\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.008Z",
        "line": 14,
        "name": "TC1401 manage accounts date selection today test",
        "description": "",
        "id": "us14-tests;tc1401-manage-accounts-date-selection-today-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 15,
            "name": "user clicks manageAccounts link21",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_manageAccounts_link21()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 16,
            "name": "user clicks createANewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_createANewAccount_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "user sends an earlier date",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_sends_an_earlier_date()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 18,
            "name": "user verifies date is an early date",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_verifies_date_is_an_early_date()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "user signOut from Website",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_signOut_from_Website()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US14"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC1401"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"karak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"karak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"DJabc21\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJabc21\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.040Z",
        "line": 22,
        "name": "TC1402 manage accounts date selection positive test",
        "description": "",
        "id": "us14-tests;tc1402-manage-accounts-date-selection-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 23,
            "name": "user clicks manageAccounts link21",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_manageAccounts_link21()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 24,
            "name": "user clicks createANewAccount link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_createANewAccount_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user account send a date \"12122020\" and click tab",
            "match": {
              "arguments": [
                {
                  "val": "\"12122020\"",
                  "offset": 25
                }
              ],
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_account_send_a_date_and_click_tab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 26,
            "name": "user account send a time \"1000\" and user click tab",
            "match": {
              "arguments": [
                {
                  "val": "\"1000\"",
                  "offset": 25
                }
              ],
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_account_send_a_time_and_user_click_tab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 27,
            "name": "user account click tab",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_account_click_tab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "skipped"
            },
            "line": 28,
            "name": "user account verifies valid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_account_verifies_valid_data_entry_to_Create_Date_box()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 29,
            "name": "user signOut from Website",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_signOut_from_Website()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US14"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC1402"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"karak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"karak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"DJabc21\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJabc21\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.074Z",
        "line": 32,
        "name": "TC1403 manage customers date selection positive test",
        "description": "",
        "id": "us14-tests;tc1403-manage-customers-date-selection-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "skipped"
            },
            "line": 33,
            "name": "user clicks manageCustomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_manageCustomers_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 34,
            "name": "user clicks createANewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_createANewCustomer_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "user customer send a date \"12122020\" and click tab",
            "match": {
              "arguments": [
                {
                  "val": "\"12122020\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_send_a_date_and_click_tab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 36,
            "name": "user customer send a time \"1000\" and user click tab",
            "match": {
              "arguments": [
                {
                  "val": "\"1000\"",
                  "offset": 26
                }
              ],
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_send_a_time_and_user_click_tab(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "user customer click tab",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_click_tab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "user customer verifies valid data entry to Create Date box",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_verifies_valid_data_entry_to_Create_Date_box()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 39,
            "name": "user signOut from Website",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_signOut_from_Website()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US14"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC1403"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"karak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"karak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"DJabc21\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJabc21\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.105Z",
        "line": 42,
        "name": "TC1404 manage customers user selection positive test",
        "description": "",
        "id": "us14-tests;tc1404-manage-customers-user-selection-positive-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 43,
            "name": "user clicks manageCustomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_manageCustomers_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "user clicks createANewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_createANewCustomer_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 45,
            "name": "user customer click user box and select a user",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_click_user_box_and_select_a_user()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "user customer verifies valid selection of user",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_verifies_valid_selection_of_user()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "user signOut from Website",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_signOut_from_Website()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US14"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC1404"
          }
        ]
      },
      {
        "line": 4,
        "name": "user enters gmibank homepage then reaches create new costomers link",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 5000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"karak\"",
            "match": {
              "arguments": [
                {
                  "val": "\"karak\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"DJabc21\"",
            "match": {
              "arguments": [
                {
                  "val": "\"DJabc21\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.132Z",
        "line": 50,
        "name": "TC1405 manage customers Zelle box selection test",
        "description": "",
        "id": "us14-tests;tc1405-manage-customers-zelle-box-selection-test",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 3000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 51,
            "name": "user clicks manageCustomers link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_manageCustomers_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "user clicks createANewCustomer link",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_clicks_createANewCustomer_link()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "user customer click Zelle Enrolled box",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_click_Zelle_Enrolled_box()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "user customer verifies that there is no allert message related to Zelle box",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_customer_verifies_that_there_is_no_allert_message_related_to_Zelle_box()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "user signOut from Website",
            "match": {
              "location": "gmibank.stepdefinitions.US_14_Step_Definitions.user_signOut_from_Website()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US14"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@TC1405"
          }
        ]
      }
    ],
    "name": "US14 tests",
    "description": "",
    "id": "us14-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_14.feature",
    "tags": [
      {
        "name": "@US14",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 7
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "user anters gmibank homepage",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 4000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.161Z",
        "line": 13,
        "name": "User should see all account types and balace populated",
        "description": "",
        "id": "us15-tests;user-should-see-all-account-types-and-balace-populated",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user clicks manage accounts",
            "match": {
              "location": "gmibank.stepdefinitions.US_15_Step_Definitions.user_clicks_manage_accounts()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "can user see all account types and balace populated",
            "match": {
              "location": "gmibank.stepdefinitions.US_15_Step_Definitions.can_user_see_all_account_types_and_balace_populated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US015"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1501"
          }
        ]
      },
      {
        "line": 4,
        "name": "user anters gmibank homepage",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Failed to instantiate class gmibank.stepdefinitions.US_10_Step_Definitions\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:135)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.getInstance(ObjectFactoryServiceLoader.java:121)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:67)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat io.cucumber.core.runtime.ObjectFactoryServiceLoader$DefaultJavaObjectFactory.cacheNewInstance(ObjectFactoryServiceLoader.java:129)\r\n\t... 33 more\r\nCaused by: org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.pages.US_10_Page.\u003cinit\u003e(US_10_Page.java:10)\r\n\tat gmibank.stepdefinitions.US_10_Step_Definitions.\u003cinit\u003e(US_10_Step_Definitions.java:14)\r\n\t... 37 more\r\n",
              "duration": 2000000,
              "status": "failed"
            },
            "line": 5,
            "name": "user enters gmibank homepage",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersGmibankHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user clicks userEntry icon",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userClicksUserEntryIcon()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user clicks signIn link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_link()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user enters admin username \"vivi\"",
            "match": {
              "arguments": [
                {
                  "val": "\"vivi\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminUsername(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters admin password \"Betul2015.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Betul2015.\"",
                  "offset": 27
                }
              ],
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userEntersAdminPassword(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user clicks signIn button",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_signIn_button()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-11-15T19:21:52.189Z",
        "line": 22,
        "name": "User can view transaction",
        "description": "",
        "id": "us15-tests;user-can-view-transaction",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d86.0.4240.198)\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-2AP8DN0\u0027, ip: \u0027192.168.0.62\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\\Users\\fikir\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56572}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 235dab4963214b6b63f72f6cc51751c2\r\n\tat sun.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\r\n\tat gmibank.utilities.Driver.getDriver(Driver.java:55)\r\n\tat gmibank.stepdefinitions.Hooks.tearDown(Hooks.java:26)\r\n",
              "duration": 6000000,
              "status": "failed"
            },
            "match": {
              "location": "gmibank.stepdefinitions.Hooks.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 23,
            "name": "user clicks myOperations link",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.user_clicks_myOperations_link()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user clicks manage accounts",
            "match": {
              "location": "gmibank.stepdefinitions.US_15_Step_Definitions.user_clicks_manage_accounts()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "can user see all transaction",
            "match": {
              "location": "gmibank.stepdefinitions.US_15_Step_Definitions.canUserSeeAllTransaction()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "line": 26,
            "name": "user signOut",
            "match": {
              "location": "gmibank.stepdefinitions.US_10_Step_Definitions.userSignOut()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@US015"
          },
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@tc1502"
          }
        ]
      }
    ],
    "name": "US15 tests",
    "description": "",
    "id": "us15-tests",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/us_15.feature",
    "tags": [
      {
        "name": "@US015",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  }
]